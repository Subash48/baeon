
<!doctype html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

    <title>Coupon Addition </title>
  </head>
  <body>
    <script>

      function computePrice()
      {
       
       table = document.getElementById("myTable");
       merchTab = document.getElementById("merchantTable");
       tr = table.getElementsByTagName("tr");
       rows = merchTab.getElementsByTagName("tr");
       dist = document.getElementById("radius").value;
       console.log(dist);
       checkboxes = document.getElementsByName('products');
       checkMerch = document.getElementsByName('merchants');
       var couponValue = 0;
       var price = 0;
       no = document.getElementById('noOfCoupons').value;
       amount = document.getElementById('amount').value;
       for(var i=0, n=checkboxes.length;i<n;i++) {  

        if(checkboxes[i].checked)
        {
          tag =  tr[i+1].getElementsByTagName("td")[4];
          couponValue = Number(no*Number(tag.innerText)*amount/100);
          //console.log(couponValue);
          //console.log('coup'+ Number((couponValue*10)/100));
          //console.log('no'+ (couponValue)/100);
          //console.log('dist' +  dist*((couponValue*2.5)/100) );
          price = Number(((couponValue*10)/100) + (couponValue/100) + dist*((couponValue*2.5)/100) )
          break;
        }

      }
      var j=0;
      <% for ( var i = 0; i < merchants.length; i++){ var merchant=merchants[i]; %>
      console.log( 10*couponValue/100 );
        tag = rows[j+1].getElementsByTagName("td")[2];
        tag.innerText = Number(Number(<%= merchant.basePrice %>)*couponValue/100 + price);
        
        j=j+1;
        <% } %>
     
      console.log(price);

      }
function toggle(source) {
  checkboxes = document.getElementsByName('products');
  for(var i=0, n=checkboxes.length;i<n;i++) {
        checkboxes[i].checked = source.checked;
}
}    
      function myFunction() {
        // Declare variables
        var input, filter, table, tr, td, i,j, txtValue,search;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
        j=document.getElementById("search");
      
        // Loop through all table rows, and hide those who don't match the search query
        for (i = 0; i < tr.length; i++) {
          td = tr[i].getElementsByTagName("td")[j.value];
          if (td) {
            txtValue = td.textContent || td.innerText;
            if (txtValue.toUpperCase().indexOf(filter) > -1) {
              tr[i].style.display = "";
            } else {
              tr[i].style.display = "none";
            }
          }
        }
      }
      </script>
   
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
   <style>
.inputGroup {
	background-color: #fff;
	display: block;
	margin: 10px 0;
	position: relative;
}

.inputGroup label {
	padding: 12px 30px;
	width: 100%;
	display: block;
	text-align: left;
	color: #3C454C;
	cursor: pointer;
	position: relative;
	z-index: 2;
	transition: color 200ms ease-in;
	overflow: hidden;
}

.inputGroup label:before {
	width: 10px;
	height: 10px;
	border-radius: 50%;
	content: '';
	background-color: #5562eb;
	position: absolute;
	left: 50%;
	top: 50%;
	transform: translate(-50%, -50%) scale3d(1, 1, 1);
	transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);
	opacity: 0;
	z-index: -1;
}

.inputGroup label:after {
	width: 32px;
	height: 32px;
	content: '';
	border: 2px solid #D1D7DC;
	background-color: #fff;
	background-image: url("data:image/svg+xml,%3Csvg width='32' height='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M5.414 11L4 12.414l5.414 5.414L20.828 6.414 19.414 5l-10 10z' fill='%23fff' fill-rule='nonzero'/%3E%3C/svg%3E ");
	background-repeat: no-repeat;
	background-position: 2px 3px;
	border-radius: 50%;
	z-index: 2;
	position: absolute;
	right: 30px;
	top: 50%;
	transform: translateY(-50%);
	cursor: pointer;
	transition: all 200ms ease-in;
}

.inputGroup input:checked ~ label {
	color: #fff;
}

.inputGroup input:checked ~ label:before {
	transform: translate(-50%, -50%) scale3d(56, 56, 1);
	opacity: 1;
}

.inputGroup input:checked ~ label:after {
	background-color: #54E0C7;
	border-color: #54E0C7;
}

.inputGroup input {
	width: 32px;
	height: 32px;
	order: 1;
	z-index: 2;
	position: absolute;
	right: 30px;
	top: 50%;
	transform: translateY(-50%);
	cursor: pointer;
	visibility: hidden;
}

/* form {
  padding: 0 16px;
  max-width: 550px;
  margin: 50px auto;
  font-size: 18px;
  font-weight: 600;
  line-height: 36px;
} */

body {
  background-color: #D1D7DC;
  font-family: 'Fira Sans', sans-serif;
}

/* *,
*::before,
*::after {
  box-sizing: inherit;
} */
/* 
html {
  box-sizing: border-box;
} */

code {
  background-color: #9AA3AC;
  padding: 0 8px;
}

#myInput {
  background-image: url('/images/searchicon.png'); /* Add a search icon to input */
  background-position: 10px 12px; /* Position the search icon */
  background-repeat: no-repeat; /* Do not repeat the icon image */
  width: 100%; /* Full-width */
  font-size: 16px; /* Increase font-size */
  padding: 12px 20px 12px 40px; /* Add some padding */
  border: 1px solid #ddd; /* Add a grey border */
  margin-bottom: 12px; /* Add some space below the input */
}
.cont {
  padding: 0 16px;
  max-width: 550px;
  margin: 50px auto;
  font-size: 18px;
  font-weight: 600;
  line-height: 36px;
}

      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 50%;
        align-self: center;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>

    <div id="map"></div>

    <div class="container">
      <br>
      <center><h1>Client Side Coupon Addition</h1>

      <form id="form" action="/api/addPromotion" method="post" enctype="multipart/form-data">
        <br>
        <div class="panel-wrapper">
          <div class="panel-head">
              SELECT THE PRODUCTS 
          </div>
          <br>
        <div class="panel-body">
          <div class="row">
          <div class="col-8">
          <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search for names..">    
          </div>
          
          <div class="col-4">
          <select class="form-control form-control-lg" value="Search using" id="search" name="Refer">
              <option value=1>Product ID</option>
              <option value=2>Product Name</option>  
            </select>
          </div>
      </div>
        <div>
        <table class="table table-striped table-bordered" id="myTable">
          <thead>
            <tr>
              <th>S No</th>
              <th>Product ID</th>
              <th>Name</th>
              <th>Stock</th>
              <th>Unit Price</th>
              <th><input type="checkbox" name="All" value="1" onClick="toggle(this)"/> Select All<br/></th>
            </tr>
          </thead>
          <tbody>
            <% for ( var i = 0; i < products.length; i++){ var product=products[i]; %>
              <tr>  
              <td><%= i+1 %></td>
              <td><%= product._id %></td>
              <td><%= product.productName %></td>
              <td><%= product.stock %></td>
              <td><%= product.unitPrice %></td>
              <td>
                <div class="checkbox">
                  <label><input name="products" type="checkbox" value=<%= product._id %> ></label>
              </div>
              </td>
              <!-- <td><button class="btn btn-primary btn-sm" >View more</button></td> -->
            </tr>
            <% } %>
          </tbody>
          </table>

    </div>
    <br><br>
        <div class="form-group col-6">
          <label for="exampleFormControlInput1">Coupon Title</label>
          <input type="text" class="form-control" id="couponTitle" name="couponTitle" placeholder="Title for the coupon" onchange="getKey()" required>
        </div>
        <br>

        <div class="form-group col-6">
          <label for="exampleFormControlTextarea1">Coupon Description</label>
          <textarea class="form-control" id="couponDescription" name="couponDescription" rows="3"></textarea>
        </div>
        <br>

        <div class="form-group col-6">
          <label for="exampleFormControlInput1">Number of Coupons</label>
          <input type="number" class="form-control" id="noOfCoupons" name="noOfCoupons" min="10" placeholder="Minimum 10 coupons"  onchange = "computePrice()" >
        </div>
        <br>


        <div class="form-group col-6">
          <label for="exampleFormControlSelect1">Type of promotion</label>
          <select class="form-control" id="isPercent" name="isPercent">
            <option>Flat Offer</option>
            <option>Discount Offer</option>
          </select>
        </div>
        <br>


          <div class="form-group col-6">
            <label for="exampleFormControlInput1">Offer amount</label>
            <input type="number" class="form-control" id="amount"  name="amount" placeholder="Value of coupon" required>
          </div>
          <br>

       

        <div class="form-group col-6">
          <label for="exampleFormControlInput1">Coupon Validity Period</label>
          <input type="text" class="form-control" id="expireDate"  name="expireDate" placeholder="In days" required>
        </div>
        <br>

        

         <div class="form-group col-6">
          <label for="exampleFormControlFile1">Add coupon image</label>
          <input type="file" class="form-control-file" id="exampleFormControlFile1" name="couponImage">
        </div> 
       

        <br><br>

        <div class="form-group col-6">
          <label for="exampleFormControlInput1">Radius of Reach</label>
          <input type="number" class="form-control" id="radius" name="radius" value=1 placeholder="Radius of reach" onchange="initMap()" onblur = "computePrice()">
        </div>

              <!-- <input type="number" id="lat" name="lat" value=windo> -->
        <input type="hidden" id="lat" name="lat" >
        <input type="hidden" id="long" name="long">
        <br>
        <br>

          <h2>Select Merchant host options</h2>
          <br>

          <!-- <div class="cont" >
            <div class="inputGroup" > -->

           <!-- <% for ( var i = 0; i < merchants.length; i++){ var merchant=merchants[i]; %>

            <div class="checkbox">
              <label><input name="merchants" type="checkbox" value=<%= merchant.id %> > <%= merchant.businessName %> </label>
              <input name="prices" value=<%= merchant.basePrice %> readonly>
          </div>
            <!-- <input id="option1" name="merchants" type="checkbox"  value=<%= merchant.id %> />
            <label for="option1"><%= merchant.businessName %></label> 

          <% } %> -->
        <!-- </div>

        </div>
          -->
           
        
        <link href="https://fonts.googleapis.com/css?family=Fira+Sans" rel="stylesheet">
        <input type="hidden" id="apikey" name="apikey">

        <table class="table table-striped table-bordered" id="merchantTable">
          <thead>
            <tr>
              <th>S No</th>
              <th>Merchant ID</th>
              <th>Fee</th>
              <th></th>
            </tr>
          </thead>
          <tbody>
            <% for ( var i = 0; i < merchants.length; i++){ var merchant=merchants[i]; %>
              <tr>  
              <td><%= i+1 %></td>
              <td><%= merchant.id %></td>
              <td><%= merchant.basePrice %></td>
             
              <td>
                <div class="checkbox">
                  <label><input name="merchants" type="checkbox" value=<%= merchant.id %> ></label>
              </div>
              </td>
              <!-- <td><button class="btn btn-primary btn-sm" >View more</button></td> -->
            </tr>
            <% } %>
          </tbody>
          </table>
          <input type="hidden" id="apikey" name="apikey">
          <input type="hidden" id = "price" name="price" value=100>
        <button type="submit" class="btn btn-primary">Submit</button>

      </form>

    </div>

  </center>

  <br><br>
  <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
  <script
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBvejVF1YsJGLKOYqJVkbMy9sgGX29XBy8&callback=initMap&libraries=&v=weekly"
    defer
  ></script>
  <style type="text/css">
    /* Always set the map height explicitly to define the size of the div
     * element that contains the map. */
    #map {
      height: 40%;
    }

    /* Optional: Makes the sample page fill the window. */
    html,
    body {
      height: 100%;
      margin: 0;
      padding: 0;
    }
  </style>
  <script>
    "use strict";
    const citymap = {
      chicago: {
        center: {
          lat: <%= lat %>,
          lng: <%= long %>
        },
        population: 2714856
      }
    };
  

    function initMap() {
      const val = document.getElementById('radius');
      var apikeyVal = document.getElementById('apikey');
     
      // Create the map.
      const map = new google.maps.Map(document.getElementById("map"), {
        zoom: 20,
        center: {
          lat:<%= lat %>,
          lng: <%= long %>
        },
      }); // Construct the circle for each value in citymap.
      // Note: We scale the area of the circle based on the population.
      for (const city in citymap) {
        // Add the circle for this city to the map.
        const cityCircle = new google.maps.Circle({
          strokeColor: "#FF0000",
          strokeOpacity: 0.8,
          strokeWeight: 2,
          fillColor: "#FF0000",
          fillOpacity: 0.35,
          map,
          center: citymap[city].center,
          radius: Number(val.value)*1000
                    });
      }
      var url_string = window.location.href;
      var url = new URL(url_string);
      var c = url.searchParams.get("apikey");
      apikeyVal.value = c;
    }

    function rad(){

          // const map = new google.maps.Map(document.getElementById("map"), {
          //   zoom: 10,
          //   center: {
          //     lat: 41.878,
          //     lng: -87.629
          //   },
          //   mapTypeId: "terrain"
          // }); 
      for (const city in citymap) {
        // Add the circle for this city to the map.
        const cityCircle = new google.maps.Circle({
          strokeColor: "#FF0000",
          strokeOpacity: 0.8,
          strokeWeight: 2,
          fillColor: "#FF0000",
          fillOpacity: 0.35,
          map,
          center: citymap[city].center,
          radius: val.value*1000
        });
      }
    }
  </script>


<!-- <label>Amount    :</label><input type=text id=order-amt /><br/> -->
<!-- <button id="order-button1">Get Order id from server</button> <br/>
<script>
document.getElementById('order-button1').onclick = function(e){
var url = '/api/payment/order';
    var params = {
  amount: document.getElementById('amount').value*100,  
  currency: "INR",
  receipt: "su001",
  payment_capture: '1'
};

var xmlHttp = new XMLHttpRequest();
xmlHttp.onreadystatechange = function (res) {
    if (xmlHttp.readyState === 4) {
      res=JSON.parse(xmlHttp.responseText);
      document.getElementById('rzp-text').value=res.sub.id;
    }
}
xmlHttp.open("POST", url, true); // false for synchronous request
xmlHttp.setRequestHeader("Content-type", "application/json");
xmlHttp.send(JSON.stringify(params));
}
</script>





<br/>
<br/>
<br/>
<br/>
<hr/>
<label>Order id   :</label><input type=text id=rzp-text /><br/>
<button id="rzp-button1">CHeckout</button>
<div id=paymentDetails></div>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
document.getElementById('rzp-button1').onclick = function(e){
    var options = {
    "key": "rzp_test_KNoCu64wQKXO55",  //Enter your razorpay key
    "currency": "INR",
    "name": "Razor Tutorial",
    "description": "Razor Test Transaction",
    "image": "https://previews.123rf.com/images/subhanbaghirov/subhanbaghirov1605/subhanbaghirov160500087/56875269-vector-light-bulb-icon-with-concept-of-idea-brainstorming-idea-illustration-.jpg",
    "order_id": document.getElementById('rzp-text').value,
    "handler": function (response){
        document.getElementById('order-pay-id').value=response.razorpay_payment_id;
 document.getElementById('order-id').value=response.razorpay_order_id;
  document.getElementById('order-sig').value=response.razorpay_signature;
    },
    "theme": {
        "color": "#227254"
    }
};
    var rzp1 = new Razorpay(options);
    rzp1.open();
    e.preventDefault();
}
</script>
<br/>
<br/>
<br/>
<br/>
<hr/>
<label>Order id    :</label><input type=text id=order-id />
<br/>
<label>payment id  :</label><input type=text id=order-pay-id />
<br/>
<label>Signature   :</label><input type=text id=order-sig />

<br/>
 <label>Verify Signature</label><button id="verify-button1">Verify</button>

<script>
document.getElementById('verify-button1').onclick = function(e){
var url = '/api/payment/verify'; 
    var params = {
  razorpay_order_id:  document.getElementById('order-id').value,  
  razorpay_payment_id:  document.getElementById('order-pay-id').value,
  razorpay_signature:  document.getElementById('order-sig').value
};
var xmlHttp = new XMLHttpRequest();
xmlHttp.onreadystatechange = function (res) {
    if (xmlHttp.readyState === 4) {
alert(xmlHttp.responseText);
    }
}
xmlHttp.open("POST", url, true); // false for synchronous request
xmlHttp.setRequestHeader("Content-type", "application/json");
xmlHttp.send(JSON.stringify(params));
}
</script> -->

  </body>

</html> 